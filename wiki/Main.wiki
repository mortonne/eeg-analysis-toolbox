= Welcome to the EEG Analysis Toolbox Wiki =

== Introduction ==
The EEG Analysis Toolbox (eeg_ana) is a front-end for the UPenn EEG Toolbox (eeg_toolbox). It supports both univariate analysis and multivariate pattern analysis, and can process large amounts of data in parallel. It also includes advanced plotting functions and the ability to generate summary PDF reports.

eeg_ana supports limited interfacing with other MATLAB-based toolboxes:
|| Toolbox     || Common Uses ||
|| beh_toolbox || Advanced analysis of memory experiments ||
|| eeg_toolbox || Wavelet analysis ||
|| EEGLAB      || Useful for visualizing data and running ICA ||
|| Fieldtrip   || Provides advanced statistics ||
|| MVPA        || Provides support for pattern classification ||

The eeg_ana project lives on [[InternalWiki/SVN|SVN]].  The latest stable version is 0.3 ({{{/home/svn/eeg/eeg_ana/branches/0.3}}}); you can also use the trunk version ({{{/home/svn/eeg/eeg_ana/trunk}}}), which changes quickly.  Note that the toolbox currently has a very small user base, so I often don't bother with backwards compatibility when developing the trunk version.  Updates to the version branch will only include bugfixes, not new features, so it will remain stable.

eeg_ana requires the "unstable" branch of eeg_toolbox ({{{svn+ssh://rhino.psych.upenn.edu/home/svn/eeg/eeg_toolbox/branches/unstable}}}), and uses some beh_toolbox functions.

A good way to get acquainted with the basic features of the toolbox is to run through the  [[InternalWiki/eeg_ana_basic_tutorial|Introductory Tutorial]].

The primary author of the eeg_ana toolbox is [[mailto:neal.w.morton@vanderbilt.edu|Neal Morton]].  Feedback and contributions are greatly appreciated!  See the [[InternalWiki/eeg_ana_toolbox/Development|Development]] page for discussion on continued development.

== The exp structure ==

The exp structure holds basic information about your experiment in a standard format.  Once you have created an exp structure that points to your data, you can begin creating [[InternalWiki/eeg_ana_events|events]] and [[InternalWiki/eeg_ana_patterns|patterns]].

A vector structure, "subj," holds information about each subject that has run in the experiment so far.  A sub-structure of each subj, "sess," contains information about each session.  If the subject ran in an EEG experiment, there will also be a "chan" structure to keep track of information about each electrode.  See below for an explanation of each field.

{{{
exp
   .experiment         Name of the experiment
   .recordingType      'N/A', 'scalp', 'iEEG'
   .resDir             Directory where results of analyses are saved
   .file               Path to the .mat file where exp is saved
   .useLock            Old field applicable to running on hippo (the old cluster)
   .lastUpdate         Time exp was last saved
   .subj               Vector structure, with one structure for each subject
       .id             Identifier of this subject
       .dir            Path to the directory containing this subject's raw data
       .chan           Vector structure that holds information about this subject's electrodes
           .number     Number identifier of this channel
           .label      String label for this channel; each channel should have a unique label
       .sess           Vector structure with information about each session run
           .number     Number identifier
           .dir        Path to the directory holding raw data
}}}

=== Initial creation of the exp struct ===

First, you need to create a "subj" struct that contains the identifiers for all the subjects in your experiment, as well as the locations of the raw data for each of their sessions.

For example, an m-file that creates subj could look like this: 

{{{
subj(1).id = 'UP001';
subj(1).sess(1).dir = '/data/eeg/UP001/catFR/session_0';
subj(1).sess(2).dir = '/data/eeg/UP001/catFR/session_1';
subj(2).id = 'UP002';
subj(2).sess(1).dir = '/data/eeg/UP002/catFR/session_0';
subj(2).sess(2).dir = '/data/eeg/UP002/catFR/session_1';
}}}

In most cases, get_sessdirs.m can be used to generate this structure automatically. Once
you have a subj struct with all the sessions you want to analyze, run init_exp.m
or init_iEEG.m to create the exp struct.

=== Importing Events ===
Now exp has information about each subject and each session that they have run, as well as information about their electrodes.  Next, we need to add information about the experiment.  This is stored in the form of an events structure.  The import_events function can be used to import events if they have already been created and stored in each session's directory.  If events have not been created yet, create_events can be used to create them.  See the [[InternalWiki/eeg_ana_events|events]] page for details on how events are stored in the exp struct.

Once events have been added to the exp structure, you can begin working with EEG data.  See the [[InternalWiki/eeg_ana_patterns|patterns]] page for directions.

=== Working with the exp Structure ===

Often, you will want to grab part of the exp structure to work with, so you don't have to give the whole address each time.  This is best done through the getobj function:

{{{
% to get all channel numbers for LTP002:

% one way:
channels = [exp.subj(2).chan.number];

% a better way, so you don't need to know the order subjects are listed
subj = getobj(exp, 'subj', 'LTP002'); % get the subject structure by ID, rather than index

channels = [subj.chan.number]; % now get the vector of channel numbers
}}}

Since {{{subj}}} is a row vector structure, iterating over subjects is easy:
{{{
% get a cell array of all regions that are covered by electrodes
regions = {};
for subj=exp.subj
  % get all regions corresponding to this subject's electrodes
  regions = [regions {subj.chan.region}];
end
}}}

Note that the above scheme only reads from each subject, and does not modify them.  If you want to make changes to all subjects, the best way to do it is through the apply_to_subj function.

=== File Management ===

Note that the exp struct contains a number of filenames. If you
change from working on the cluster to working on a local machine (or vice versa), the
filenames will be incorrect. To remedy this, use {{{struct_strrep.m}}}.
It will run strrep recursively on every string in the struct or any of its
sub-structs, and so can be used to change filenames systematically.

Each time the exp struct is
modified using update_exp.m, a backup is saved in a .mat file whose filename contains
the current data and time. If you encounter any problems with information in the exp
struct being overwritten or deleted, use {{{exp_log}}} to see the available backups, and {{{load_exp}}} to load a backup.

Let's say you want to take an experiment structure created by someone else, and work with it in your own directory.  The script {{{copy_exp.m}}} is useful to create a copy that you can work from.  However, you must be careful not to save new files to their directory.  Most functions have an optional "res_dir" input you can use to override the default output directory.

{{{
Example:  exp = copy_exp(exp,respath);
}}}

== Analysis ==
Here is a quick overview of how to do analysis using eeg_ana:
 1. Create an exp structure using {{{get_sessdirs}}} and {{{init_exp}}} or {{{init_iEEG}}}.
  a. If necessary, create events for each session using {{{create_events}}}, then align them to EEG data using {{{post_process_subj}}} (for EGI data) or {{{align_subj}}} (for clinical ECoG data).
 1. Import events using {{{import_events}}}.
 1. Create EEG patterns using {{{create_voltage_pattern}}} or {{{create_power_pattern}}}.
 1. Use various function to manipulate patterns (see the functions in eeg_ana/patterns/operations).  For example, use {{{bin_pattern}}} to average across events or apply binning to the channel, time, or frequency dimension.  Use {{{pat_statistics}}} to test for significant differences between two classes of events.
 1. Make plots using {{{pat_erp}}}, {{{pat_tfr}}}, {{{pat_erp_image}}}, {{{pat_topoplot}}}, or {{{pat_plottopo}}}.
 1. Make a report to bring the plots together in one PDF using {{{create_pat_report}}}, which makes creating common reports simple, or {{{create_report}}}, which is more flexible.

For details on different types of analyses, see the following pages:
 * [[InternalWiki/eeg_ana_events|Events]].
 * [[InternalWiki/eeg_ana_patterns|Patterns]].
 * [[InternalWiki/eeg_ana_patclass|Patclass]].  
 * [[InternalWiki/eeg_ana_stats|Stats]].
 * [[InternalWiki/eeg_ana_plotting|Plotting]].